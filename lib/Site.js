// Generated by CoffeeScript 1.7.1
var Site, express, http;

express = require('express');

http = require('http');

Site = (function() {
  function Site(app) {
    this.app = app;
    this.express = null;
    this.server = null;
    this.port = 3000;
  }

  Site.prototype.start = function(cb) {
    this.express = express();
    this.configure();
    this.registerRoutes();
    return this.createServer(cb);
  };

  Site.prototype.stop = function() {};

  Site.prototype.configure = function() {
    var e;
    e = this.express;
    e.set('port', this.port);
    e.set('views', this.app.dir + '/views');
    e.set('view engine', 'jade');
    e.use(express.favicon());
    e.use(express.urlencoded());
    e.use(express.json());
    e.use(express.methodOverride());
    e.use('/s', express["static"](this.app.dir + '/s'));
    e.use(this.locals.bind(this));
    return e.use(e.router);
  };

  Site.prototype.registerRoutes = function() {
    var func, path, route, verb, _i, _len, _ref;
    _ref = this.app.routes;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      route = _ref[_i];
      verb = route[0], path = route[1], func = route[2];
      this.express[verb](path, func);
    }
  };

  Site.prototype.createServer = function(cb) {
    this.server = http.createServer(this.express);
    return this.server.listen(this.port, (function(_this) {
      return function() {
        console.log('standalone', _this.app.id, 'server listening on', _this.port);
        return cb();
      };
    })(this));
  };

  Site.prototype.locals = function(req, res, next) {
    res.locals.app = this.app;
    return next();
  };

  return Site;

})();

module.exports = Site;
